/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.pydio.kotlin.openapi.kmp.model

import com.pydio.kotlin.openapi.kmp.model.TreeGeoQuery
import com.pydio.kotlin.openapi.kmp.model.TreeNodeType

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param content 
 * @param durationDate 
 * @param etag 
 * @param extension 
 * @param fileName 
 * @param fileNameOrContent 
 * @param freeString Bleve-like search query to search for a specific metadata value. When querying nodes, this will redirect this query to the Search Engine. When filtering an input, this will load an in-memory bleve engine to evaluate the node.  Bleve query string format is a space separated list of `[+-]key:value`, where node meta keys must be prepended with \"Meta.\" For Example, for tags: `+Meta.usermeta-tags:myvalue`
 * @param geoQuery 
 * @param maxDate 
 * @param maxSize 
 * @param minDate 
 * @param minSize 
 * @param not 
 * @param pathDepth 
 * @param pathPrefix 
 * @param paths 
 * @param type 
 * @param uuIDs 
 */
@Serializable

data class TreeQuery (

    @SerialName(value = "Content") val content: kotlin.String? = null,

    @SerialName(value = "DurationDate") val durationDate: kotlin.String? = null,

    @SerialName(value = "ETag") val etag: kotlin.String? = null,

    @SerialName(value = "Extension") val extension: kotlin.String? = null,

    @SerialName(value = "FileName") val fileName: kotlin.String? = null,

    @SerialName(value = "FileNameOrContent") val fileNameOrContent: kotlin.String? = null,

    /* Bleve-like search query to search for a specific metadata value. When querying nodes, this will redirect this query to the Search Engine. When filtering an input, this will load an in-memory bleve engine to evaluate the node.  Bleve query string format is a space separated list of `[+-]key:value`, where node meta keys must be prepended with \"Meta.\" For Example, for tags: `+Meta.usermeta-tags:myvalue` */
    @SerialName(value = "FreeString") val freeString: kotlin.String? = null,

    @SerialName(value = "GeoQuery") val geoQuery: TreeGeoQuery? = null,

    @SerialName(value = "MaxDate") val maxDate: kotlin.String? = null,

    @SerialName(value = "MaxSize") val maxSize: kotlin.String? = null,

    @SerialName(value = "MinDate") val minDate: kotlin.String? = null,

    @SerialName(value = "MinSize") val minSize: kotlin.String? = null,

    @SerialName(value = "Not") val not: kotlin.Boolean? = null,

    @SerialName(value = "PathDepth") val pathDepth: kotlin.Int? = null,

    @SerialName(value = "PathPrefix") val pathPrefix: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "Paths") val paths: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "Type") val type: TreeNodeType? = TreeNodeType.UNKNOWN,

    @SerialName(value = "UUIDs") val uuIDs: kotlin.collections.List<kotlin.String>? = null

) {


}


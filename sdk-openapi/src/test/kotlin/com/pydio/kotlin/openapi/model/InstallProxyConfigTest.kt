/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class InstallProxyConfigTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of InstallProxyConfig
    // val modelInstance = InstallProxyConfig()

    // to test the property `binds`
    should("test binds") {
      // uncomment below to test the property
      // modelInstance.binds shouldBe ("TODO")
    }

    // to test the property `certificate`
    should("test certificate") {
      // uncomment below to test the property
      // modelInstance.certificate shouldBe ("TODO")
    }

    // to test the property `computedHash`
    should("test computedHash") {
      // uncomment below to test the property
      // modelInstance.computedHash shouldBe ("TODO")
    }

    // to test the property `headerMods`
    should("test headerMods") {
      // uncomment below to test the property
      // modelInstance.headerMods shouldBe ("TODO")
    }

    // to test the property `letsEncrypt`
    should("test letsEncrypt") {
      // uncomment below to test the property
      // modelInstance.letsEncrypt shouldBe ("TODO")
    }

    // to test the property `maintenance`
    should("test maintenance") {
      // uncomment below to test the property
      // modelInstance.maintenance shouldBe ("TODO")
    }

    // to test the property `maintenanceConditions`
    should("test maintenanceConditions") {
      // uncomment below to test the property
      // modelInstance.maintenanceConditions shouldBe ("TODO")
    }

    // to test the property `reverseProxyURL`
    should("test reverseProxyURL") {
      // uncomment below to test the property
      // modelInstance.reverseProxyURL shouldBe ("TODO")
    }

    // to test the property `routing`
    should("test routing") {
      // uncomment below to test the property
      // modelInstance.routing shouldBe ("TODO")
    }

    // to test the property `ssLRedirect`
    should("test ssLRedirect") {
      // uncomment below to test the property
      // modelInstance.ssLRedirect shouldBe ("TODO")
    }

    // to test the property `selfSigned`
    should("test selfSigned") {
      // uncomment below to test the property
      // modelInstance.selfSigned shouldBe ("TODO")
    }
  }
}

/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class UserServicePutRolesBodyTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of UserServicePutRolesBody
    // val modelInstance = UserServicePutRolesBody()

    // to test the property `attributes`
    should("test attributes") {
      // uncomment below to test the property
      // modelInstance.attributes shouldBe ("TODO")
    }

    // to test the property `groupLabel`
    should("test groupLabel") {
      // uncomment below to test the property
      // modelInstance.groupLabel shouldBe ("TODO")
    }

    // to test the property `groupPath`
    should("test groupPath") {
      // uncomment below to test the property
      // modelInstance.groupPath shouldBe ("TODO")
    }

    // to test the property `isGroup`
    should("test isGroup") {
      // uncomment below to test the property
      // modelInstance.isGroup shouldBe ("TODO")
    }

    // to test the property `lastConnected`
    should("test lastConnected") {
      // uncomment below to test the property
      // modelInstance.lastConnected shouldBe ("TODO")
    }

    // to test the property `oldPassword`
    should("test oldPassword") {
      // uncomment below to test the property
      // modelInstance.oldPassword shouldBe ("TODO")
    }

    // to test the property `password`
    should("test password") {
      // uncomment below to test the property
      // modelInstance.password shouldBe ("TODO")
    }

    // to test the property `policies`
    should("test policies") {
      // uncomment below to test the property
      // modelInstance.policies shouldBe ("TODO")
    }

    // to test the property `policiesContextEditable` - Context-resolved to quickly check if user is
    // editable or not.
    should("test policiesContextEditable") {
      // uncomment below to test the property
      // modelInstance.policiesContextEditable shouldBe ("TODO")
    }

    // to test the property `roles`
    should("test roles") {
      // uncomment below to test the property
      // modelInstance.roles shouldBe ("TODO")
    }

    // to test the property `uuid`
    should("test uuid") {
      // uncomment below to test the property
      // modelInstance.uuid shouldBe ("TODO")
    }
  }
}

/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class IdmUserSingleQueryTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of IdmUserSingleQuery
    // val modelInstance = IdmUserSingleQuery()

    // to test the property `attributeAnyValue`
    should("test attributeAnyValue") {
      // uncomment below to test the property
      // modelInstance.attributeAnyValue shouldBe ("TODO")
    }

    // to test the property `attributeName`
    should("test attributeName") {
      // uncomment below to test the property
      // modelInstance.attributeName shouldBe ("TODO")
    }

    // to test the property `attributeValue`
    should("test attributeValue") {
      // uncomment below to test the property
      // modelInstance.attributeValue shouldBe ("TODO")
    }

    // to test the property `connectedSince`
    should("test connectedSince") {
      // uncomment below to test the property
      // modelInstance.connectedSince shouldBe ("TODO")
    }

    // to test the property `fullPath`
    should("test fullPath") {
      // uncomment below to test the property
      // modelInstance.fullPath shouldBe ("TODO")
    }

    // to test the property `groupPath`
    should("test groupPath") {
      // uncomment below to test the property
      // modelInstance.groupPath shouldBe ("TODO")
    }

    // to test the property `hasProfile`
    should("test hasProfile") {
      // uncomment below to test the property
      // modelInstance.hasProfile shouldBe ("TODO")
    }

    // to test the property `hasRole`
    should("test hasRole") {
      // uncomment below to test the property
      // modelInstance.hasRole shouldBe ("TODO")
    }

    // to test the property `login`
    should("test login") {
      // uncomment below to test the property
      // modelInstance.login shouldBe ("TODO")
    }

    // to test the property `nodeType`
    should("test nodeType") {
      // uncomment below to test the property
      // modelInstance.nodeType shouldBe ("TODO")
    }

    // to test the property `password`
    should("test password") {
      // uncomment below to test the property
      // modelInstance.password shouldBe ("TODO")
    }

    // to test the property `recursive`
    should("test recursive") {
      // uncomment below to test the property
      // modelInstance.recursive shouldBe ("TODO")
    }

    // to test the property `uuid`
    should("test uuid") {
      // uncomment below to test the property
      // modelInstance.uuid shouldBe ("TODO")
    }

    // to test the property `not`
    should("test not") {
      // uncomment below to test the property
      // modelInstance.not shouldBe ("TODO")
    }
  }
}

/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class JobsActionTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of JobsAction
    // val modelInstance = JobsAction()

    // to test the property `actionOutputFilter`
    should("test actionOutputFilter") {
      // uncomment below to test the property
      // modelInstance.actionOutputFilter shouldBe ("TODO")
    }

    // to test the property `breakAfter`
    should("test breakAfter") {
      // uncomment below to test the property
      // modelInstance.breakAfter shouldBe ("TODO")
    }

    // to test the property `bypass`
    should("test bypass") {
      // uncomment below to test the property
      // modelInstance.bypass shouldBe ("TODO")
    }

    // to test the property `chainedActions`
    should("test chainedActions") {
      // uncomment below to test the property
      // modelInstance.chainedActions shouldBe ("TODO")
    }

    // to test the property `contextMetaFilter`
    should("test contextMetaFilter") {
      // uncomment below to test the property
      // modelInstance.contextMetaFilter shouldBe ("TODO")
    }

    // to test the property `dataFilter`
    should("test dataFilter") {
      // uncomment below to test the property
      // modelInstance.dataFilter shouldBe ("TODO")
    }

    // to test the property `dataSelector`
    should("test dataSelector") {
      // uncomment below to test the property
      // modelInstance.dataSelector shouldBe ("TODO")
    }

    // to test the property `dataSourceFilter`
    should("test dataSourceFilter") {
      // uncomment below to test the property
      // modelInstance.dataSourceFilter shouldBe ("TODO")
    }

    // to test the property `dataSourceSelector`
    should("test dataSourceSelector") {
      // uncomment below to test the property
      // modelInstance.dataSourceSelector shouldBe ("TODO")
    }

    // to test the property `description`
    should("test description") {
      // uncomment below to test the property
      // modelInstance.description shouldBe ("TODO")
    }

    // to test the property `failedFilterActions`
    should("test failedFilterActions") {
      // uncomment below to test the property
      // modelInstance.failedFilterActions shouldBe ("TODO")
    }

    // to test the property `ID`
    should("test ID") {
      // uncomment below to test the property
      // modelInstance.ID shouldBe ("TODO")
    }

    // to test the property `idmFilter`
    should("test idmFilter") {
      // uncomment below to test the property
      // modelInstance.idmFilter shouldBe ("TODO")
    }

    // to test the property `idmSelector`
    should("test idmSelector") {
      // uncomment below to test the property
      // modelInstance.idmSelector shouldBe ("TODO")
    }

    // to test the property `label`
    should("test label") {
      // uncomment below to test the property
      // modelInstance.label shouldBe ("TODO")
    }

    // to test the property `mergeAction`
    should("test mergeAction") {
      // uncomment below to test the property
      // modelInstance.mergeAction shouldBe ("TODO")
    }

    // to test the property `nodesFilter`
    should("test nodesFilter") {
      // uncomment below to test the property
      // modelInstance.nodesFilter shouldBe ("TODO")
    }

    // to test the property `nodesSelector`
    should("test nodesSelector") {
      // uncomment below to test the property
      // modelInstance.nodesSelector shouldBe ("TODO")
    }

    // to test the property `parameters`
    should("test parameters") {
      // uncomment below to test the property
      // modelInstance.parameters shouldBe ("TODO")
    }

    // to test the property `timeout`
    should("test timeout") {
      // uncomment below to test the property
      // modelInstance.timeout shouldBe ("TODO")
    }

    // to test the property `triggerFilter`
    should("test triggerFilter") {
      // uncomment below to test the property
      // modelInstance.triggerFilter shouldBe ("TODO")
    }

    // to test the property `usersFilter`
    should("test usersFilter") {
      // uncomment below to test the property
      // modelInstance.usersFilter shouldBe ("TODO")
    }

    // to test the property `usersSelector`
    should("test usersSelector") {
      // uncomment below to test the property
      // modelInstance.usersSelector shouldBe ("TODO")
    }
  }
}

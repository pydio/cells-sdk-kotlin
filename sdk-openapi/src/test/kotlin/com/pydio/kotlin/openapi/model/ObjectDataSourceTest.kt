/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class ObjectDataSourceTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of ObjectDataSource
    // val modelInstance = ObjectDataSource()

    // to test the property `apiKey`
    should("test apiKey") {
      // uncomment below to test the property
      // modelInstance.apiKey shouldBe ("TODO")
    }

    // to test the property `apiSecret`
    should("test apiSecret") {
      // uncomment below to test the property
      // modelInstance.apiSecret shouldBe ("TODO")
    }

    // to test the property `creationDate`
    should("test creationDate") {
      // uncomment below to test the property
      // modelInstance.creationDate shouldBe ("TODO")
    }

    // to test the property `disabled`
    should("test disabled") {
      // uncomment below to test the property
      // modelInstance.disabled shouldBe ("TODO")
    }

    // to test the property `encryptionKey`
    should("test encryptionKey") {
      // uncomment below to test the property
      // modelInstance.encryptionKey shouldBe ("TODO")
    }

    // to test the property `encryptionMode`
    should("test encryptionMode") {
      // uncomment below to test the property
      // modelInstance.encryptionMode shouldBe ("TODO")
    }

    // to test the property `flatStorage`
    should("test flatStorage") {
      // uncomment below to test the property
      // modelInstance.flatStorage shouldBe ("TODO")
    }

    // to test the property `lastSynchronizationDate`
    should("test lastSynchronizationDate") {
      // uncomment below to test the property
      // modelInstance.lastSynchronizationDate shouldBe ("TODO")
    }

    // to test the property `name`
    should("test name") {
      // uncomment below to test the property
      // modelInstance.name shouldBe ("TODO")
    }

    // to test the property `objectsBaseFolder`
    should("test objectsBaseFolder") {
      // uncomment below to test the property
      // modelInstance.objectsBaseFolder shouldBe ("TODO")
    }

    // to test the property `objectsBucket`
    should("test objectsBucket") {
      // uncomment below to test the property
      // modelInstance.objectsBucket shouldBe ("TODO")
    }

    // to test the property `objectsHost`
    should("test objectsHost") {
      // uncomment below to test the property
      // modelInstance.objectsHost shouldBe ("TODO")
    }

    // to test the property `objectsPort`
    should("test objectsPort") {
      // uncomment below to test the property
      // modelInstance.objectsPort shouldBe ("TODO")
    }

    // to test the property `objectsSecure`
    should("test objectsSecure") {
      // uncomment below to test the property
      // modelInstance.objectsSecure shouldBe ("TODO")
    }

    // to test the property `objectsServiceName`
    should("test objectsServiceName") {
      // uncomment below to test the property
      // modelInstance.objectsServiceName shouldBe ("TODO")
    }

    // to test the property `peerAddress`
    should("test peerAddress") {
      // uncomment below to test the property
      // modelInstance.peerAddress shouldBe ("TODO")
    }

    // to test the property `skipSyncOnRestart`
    should("test skipSyncOnRestart") {
      // uncomment below to test the property
      // modelInstance.skipSyncOnRestart shouldBe ("TODO")
    }

    // to test the property `storageConfiguration`
    should("test storageConfiguration") {
      // uncomment below to test the property
      // modelInstance.storageConfiguration shouldBe ("TODO")
    }

    // to test the property `storageType`
    should("test storageType") {
      // uncomment below to test the property
      // modelInstance.storageType shouldBe ("TODO")
    }

    // to test the property `versioningPolicyName`
    should("test versioningPolicyName") {
      // uncomment below to test the property
      // modelInstance.versioningPolicyName shouldBe ("TODO")
    }

    // to test the property `watch`
    should("test watch") {
      // uncomment below to test the property
      // modelInstance.watch shouldBe ("TODO")
    }
  }
}

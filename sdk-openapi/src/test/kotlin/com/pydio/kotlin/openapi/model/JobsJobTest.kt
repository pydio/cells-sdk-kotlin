/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class JobsJobTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of JobsJob
    // val modelInstance = JobsJob()

    // to test the property `actions`
    should("test actions") {
      // uncomment below to test the property
      // modelInstance.actions shouldBe ("TODO")
    }

    // to test the property `autoClean`
    should("test autoClean") {
      // uncomment below to test the property
      // modelInstance.autoClean shouldBe ("TODO")
    }

    // to test the property `autoRestart`
    should("test autoRestart") {
      // uncomment below to test the property
      // modelInstance.autoRestart shouldBe ("TODO")
    }

    // to test the property `autoStart`
    should("test autoStart") {
      // uncomment below to test the property
      // modelInstance.autoStart shouldBe ("TODO")
    }

    // to test the property `contextMetaFilter`
    should("test contextMetaFilter") {
      // uncomment below to test the property
      // modelInstance.contextMetaFilter shouldBe ("TODO")
    }

    // to test the property `createdAt`
    should("test createdAt") {
      // uncomment below to test the property
      // modelInstance.createdAt shouldBe ("TODO")
    }

    // to test the property `custom`
    should("test custom") {
      // uncomment below to test the property
      // modelInstance.custom shouldBe ("TODO")
    }

    // to test the property `dataSourceFilter`
    should("test dataSourceFilter") {
      // uncomment below to test the property
      // modelInstance.dataSourceFilter shouldBe ("TODO")
    }

    // to test the property `eventNames`
    should("test eventNames") {
      // uncomment below to test the property
      // modelInstance.eventNames shouldBe ("TODO")
    }

    // to test the property `hooks`
    should("test hooks") {
      // uncomment below to test the property
      // modelInstance.hooks shouldBe ("TODO")
    }

    // to test the property `ID`
    should("test ID") {
      // uncomment below to test the property
      // modelInstance.ID shouldBe ("TODO")
    }

    // to test the property `idmFilter`
    should("test idmFilter") {
      // uncomment below to test the property
      // modelInstance.idmFilter shouldBe ("TODO")
    }

    // to test the property `inactive`
    should("test inactive") {
      // uncomment below to test the property
      // modelInstance.inactive shouldBe ("TODO")
    }

    // to test the property `label`
    should("test label") {
      // uncomment below to test the property
      // modelInstance.label shouldBe ("TODO")
    }

    // to test the property `languages`
    should("test languages") {
      // uncomment below to test the property
      // modelInstance.languages shouldBe ("TODO")
    }

    // to test the property `maxConcurrency`
    should("test maxConcurrency") {
      // uncomment below to test the property
      // modelInstance.maxConcurrency shouldBe ("TODO")
    }

    // to test the property `mergeAction`
    should("test mergeAction") {
      // uncomment below to test the property
      // modelInstance.mergeAction shouldBe ("TODO")
    }

    // to test the property `metadata` - Additional user-defined metadata, can be used for icon,
    // documentation, pre-requisites, etc.
    should("test metadata") {
      // uncomment below to test the property
      // modelInstance.metadata shouldBe ("TODO")
    }

    // to test the property `modifiedAt`
    should("test modifiedAt") {
      // uncomment below to test the property
      // modelInstance.modifiedAt shouldBe ("TODO")
    }

    // to test the property `nodeEventFilter`
    should("test nodeEventFilter") {
      // uncomment below to test the property
      // modelInstance.nodeEventFilter shouldBe ("TODO")
    }

    // to test the property `owner`
    should("test owner") {
      // uncomment below to test the property
      // modelInstance.owner shouldBe ("TODO")
    }

    // to test the property `parameters`
    should("test parameters") {
      // uncomment below to test the property
      // modelInstance.parameters shouldBe ("TODO")
    }

    // to test the property `resourcesDependencies`
    should("test resourcesDependencies") {
      // uncomment below to test the property
      // modelInstance.resourcesDependencies shouldBe ("TODO")
    }

    // to test the property `schedule`
    should("test schedule") {
      // uncomment below to test the property
      // modelInstance.schedule shouldBe ("TODO")
    }

    // to test the property `tasks`
    should("test tasks") {
      // uncomment below to test the property
      // modelInstance.tasks shouldBe ("TODO")
    }

    // to test the property `tasksSilentUpdate`
    should("test tasksSilentUpdate") {
      // uncomment below to test the property
      // modelInstance.tasksSilentUpdate shouldBe ("TODO")
    }

    // to test the property `timeout`
    should("test timeout") {
      // uncomment below to test the property
      // modelInstance.timeout shouldBe ("TODO")
    }

    // to test the property `userEventFilter`
    should("test userEventFilter") {
      // uncomment below to test the property
      // modelInstance.userEventFilter shouldBe ("TODO")
    }

    // to test the property `versionMeta`
    should("test versionMeta") {
      // uncomment below to test the property
      // modelInstance.versionMeta shouldBe ("TODO")
    }
  }
}

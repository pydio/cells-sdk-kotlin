/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class RestShareLinkTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of RestShareLink
    // val modelInstance = RestShareLink()

    // to test the property `accessEnd`
    should("test accessEnd") {
      // uncomment below to test the property
      // modelInstance.accessEnd shouldBe ("TODO")
    }

    // to test the property `accessStart`
    should("test accessStart") {
      // uncomment below to test the property
      // modelInstance.accessStart shouldBe ("TODO")
    }

    // to test the property `currentDownloads`
    should("test currentDownloads") {
      // uncomment below to test the property
      // modelInstance.currentDownloads shouldBe ("TODO")
    }

    // to test the property `description`
    should("test description") {
      // uncomment below to test the property
      // modelInstance.description shouldBe ("TODO")
    }

    // to test the property `label`
    should("test label") {
      // uncomment below to test the property
      // modelInstance.label shouldBe ("TODO")
    }

    // to test the property `linkHash`
    should("test linkHash") {
      // uncomment below to test the property
      // modelInstance.linkHash shouldBe ("TODO")
    }

    // to test the property `linkUrl`
    should("test linkUrl") {
      // uncomment below to test the property
      // modelInstance.linkUrl shouldBe ("TODO")
    }

    // to test the property `maxDownloads`
    should("test maxDownloads") {
      // uncomment below to test the property
      // modelInstance.maxDownloads shouldBe ("TODO")
    }

    // to test the property `passwordRequired`
    should("test passwordRequired") {
      // uncomment below to test the property
      // modelInstance.passwordRequired shouldBe ("TODO")
    }

    // to test the property `permissions`
    should("test permissions") {
      // uncomment below to test the property
      // modelInstance.permissions shouldBe ("TODO")
    }

    // to test the property `policies`
    should("test policies") {
      // uncomment below to test the property
      // modelInstance.policies shouldBe ("TODO")
    }

    // to test the property `policiesContextEditable`
    should("test policiesContextEditable") {
      // uncomment below to test the property
      // modelInstance.policiesContextEditable shouldBe ("TODO")
    }

    // to test the property `restrictToTargetUsers`
    should("test restrictToTargetUsers") {
      // uncomment below to test the property
      // modelInstance.restrictToTargetUsers shouldBe ("TODO")
    }

    // to test the property `rootNodes`
    should("test rootNodes") {
      // uncomment below to test the property
      // modelInstance.rootNodes shouldBe ("TODO")
    }

    // to test the property `targetUsers`
    should("test targetUsers") {
      // uncomment below to test the property
      // modelInstance.targetUsers shouldBe ("TODO")
    }

    // to test the property `userLogin`
    should("test userLogin") {
      // uncomment below to test the property
      // modelInstance.userLogin shouldBe ("TODO")
    }

    // to test the property `userUuid`
    should("test userUuid") {
      // uncomment below to test the property
      // modelInstance.userUuid shouldBe ("TODO")
    }

    // to test the property `uuid`
    should("test uuid") {
      // uncomment below to test the property
      // modelInstance.uuid shouldBe ("TODO")
    }

    // to test the property `viewTemplateName`
    should("test viewTemplateName") {
      // uncomment below to test the property
      // modelInstance.viewTemplateName shouldBe ("TODO")
    }
  }
}

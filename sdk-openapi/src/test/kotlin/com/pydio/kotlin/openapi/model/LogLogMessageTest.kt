/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class LogLogMessageTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of LogLogMessage
    // val modelInstance = LogLogMessage()

    // to test the property `groupPath`
    should("test groupPath") {
      // uncomment below to test the property
      // modelInstance.groupPath shouldBe ("TODO")
    }

    // to test the property `httpProtocol`
    should("test httpProtocol") {
      // uncomment below to test the property
      // modelInstance.httpProtocol shouldBe ("TODO")
    }

    // to test the property `jsonZaps`
    should("test jsonZaps") {
      // uncomment below to test the property
      // modelInstance.jsonZaps shouldBe ("TODO")
    }

    // to test the property `level`
    should("test level") {
      // uncomment below to test the property
      // modelInstance.level shouldBe ("TODO")
    }

    // to test the property `logger`
    should("test logger") {
      // uncomment below to test the property
      // modelInstance.logger shouldBe ("TODO")
    }

    // to test the property `msg`
    should("test msg") {
      // uncomment below to test the property
      // modelInstance.msg shouldBe ("TODO")
    }

    // to test the property `msgId`
    should("test msgId") {
      // uncomment below to test the property
      // modelInstance.msgId shouldBe ("TODO")
    }

    // to test the property `nodePath`
    should("test nodePath") {
      // uncomment below to test the property
      // modelInstance.nodePath shouldBe ("TODO")
    }

    // to test the property `nodeUuid`
    should("test nodeUuid") {
      // uncomment below to test the property
      // modelInstance.nodeUuid shouldBe ("TODO")
    }

    // to test the property `operationLabel`
    should("test operationLabel") {
      // uncomment below to test the property
      // modelInstance.operationLabel shouldBe ("TODO")
    }

    // to test the property `operationUuid`
    should("test operationUuid") {
      // uncomment below to test the property
      // modelInstance.operationUuid shouldBe ("TODO")
    }

    // to test the property `profile`
    should("test profile") {
      // uncomment below to test the property
      // modelInstance.profile shouldBe ("TODO")
    }

    // to test the property `remoteAddress`
    should("test remoteAddress") {
      // uncomment below to test the property
      // modelInstance.remoteAddress shouldBe ("TODO")
    }

    // to test the property `roleUuids`
    should("test roleUuids") {
      // uncomment below to test the property
      // modelInstance.roleUuids shouldBe ("TODO")
    }

    // to test the property `schedulerJobUuid`
    should("test schedulerJobUuid") {
      // uncomment below to test the property
      // modelInstance.schedulerJobUuid shouldBe ("TODO")
    }

    // to test the property `schedulerTaskActionPath`
    should("test schedulerTaskActionPath") {
      // uncomment below to test the property
      // modelInstance.schedulerTaskActionPath shouldBe ("TODO")
    }

    // to test the property `schedulerTaskUuid`
    should("test schedulerTaskUuid") {
      // uncomment below to test the property
      // modelInstance.schedulerTaskUuid shouldBe ("TODO")
    }

    // to test the property `spanParentUuid`
    should("test spanParentUuid") {
      // uncomment below to test the property
      // modelInstance.spanParentUuid shouldBe ("TODO")
    }

    // to test the property `spanRootUuid`
    should("test spanRootUuid") {
      // uncomment below to test the property
      // modelInstance.spanRootUuid shouldBe ("TODO")
    }

    // to test the property `spanUuid`
    should("test spanUuid") {
      // uncomment below to test the property
      // modelInstance.spanUuid shouldBe ("TODO")
    }

    // to test the property `transferSize`
    should("test transferSize") {
      // uncomment below to test the property
      // modelInstance.transferSize shouldBe ("TODO")
    }

    // to test the property `ts`
    should("test ts") {
      // uncomment below to test the property
      // modelInstance.ts shouldBe ("TODO")
    }

    // to test the property `userAgent`
    should("test userAgent") {
      // uncomment below to test the property
      // modelInstance.userAgent shouldBe ("TODO")
    }

    // to test the property `userName`
    should("test userName") {
      // uncomment below to test the property
      // modelInstance.userName shouldBe ("TODO")
    }

    // to test the property `userUuid`
    should("test userUuid") {
      // uncomment below to test the property
      // modelInstance.userUuid shouldBe ("TODO")
    }

    // to test the property `wsScope`
    should("test wsScope") {
      // uncomment below to test the property
      // modelInstance.wsScope shouldBe ("TODO")
    }

    // to test the property `wsUuid`
    should("test wsUuid") {
      // uncomment below to test the property
      // modelInstance.wsUuid shouldBe ("TODO")
    }
  }
}

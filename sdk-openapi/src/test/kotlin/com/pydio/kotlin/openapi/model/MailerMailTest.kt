/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.pydio.kotlin.openapi.model

import io.kotlintest.specs.ShouldSpec

class MailerMailTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of MailerMail
    // val modelInstance = MailerMail()

    // to test the property `attachments`
    should("test attachments") {
      // uncomment below to test the property
      // modelInstance.attachments shouldBe ("TODO")
    }

    // to test the property `cc`
    should("test cc") {
      // uncomment below to test the property
      // modelInstance.cc shouldBe ("TODO")
    }

    // to test the property `contentHtml`
    should("test contentHtml") {
      // uncomment below to test the property
      // modelInstance.contentHtml shouldBe ("TODO")
    }

    // to test the property `contentMarkdown`
    should("test contentMarkdown") {
      // uncomment below to test the property
      // modelInstance.contentMarkdown shouldBe ("TODO")
    }

    // to test the property `contentPlain`
    should("test contentPlain") {
      // uncomment below to test the property
      // modelInstance.contentPlain shouldBe ("TODO")
    }

    // to test the property `dateSent`
    should("test dateSent") {
      // uncomment below to test the property
      // modelInstance.dateSent shouldBe ("TODO")
    }

    // to test the property `from`
    should("test from") {
      // uncomment below to test the property
      // modelInstance.from shouldBe ("TODO")
    }

    // to test the property `retries`
    should("test retries") {
      // uncomment below to test the property
      // modelInstance.retries shouldBe ("TODO")
    }

    // to test the property `sender`
    should("test sender") {
      // uncomment below to test the property
      // modelInstance.sender shouldBe ("TODO")
    }

    // to test the property `subject`
    should("test subject") {
      // uncomment below to test the property
      // modelInstance.subject shouldBe ("TODO")
    }

    // to test the property `templateData`
    should("test templateData") {
      // uncomment below to test the property
      // modelInstance.templateData shouldBe ("TODO")
    }

    // to test the property `templateId`
    should("test templateId") {
      // uncomment below to test the property
      // modelInstance.templateId shouldBe ("TODO")
    }

    // to test the property `threadIndex`
    should("test threadIndex") {
      // uncomment below to test the property
      // modelInstance.threadIndex shouldBe ("TODO")
    }

    // to test the property `threadUuid`
    should("test threadUuid") {
      // uncomment below to test the property
      // modelInstance.threadUuid shouldBe ("TODO")
    }

    // to test the property `to`
    should("test to") {
      // uncomment below to test the property
      // modelInstance.to shouldBe ("TODO")
    }

    // to test the property `sendErrors`
    should("test sendErrors") {
      // uncomment below to test the property
      // modelInstance.sendErrors shouldBe ("TODO")
    }
  }
}
